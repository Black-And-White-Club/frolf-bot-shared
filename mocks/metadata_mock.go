// Code generated by MockGen. DO NOT EDIT.
// Source: events/metadata.go
//
// Generated by this command:
//
//	mockgen -source=events/metadata.go -destination=./mocks/metadata_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMetadataCarrier is a mock of MetadataCarrier interface.
type MockMetadataCarrier struct {
	ctrl     *gomock.Controller
	recorder *MockMetadataCarrierMockRecorder
	isgomock struct{}
}

// MockMetadataCarrierMockRecorder is the mock recorder for MockMetadataCarrier.
type MockMetadataCarrierMockRecorder struct {
	mock *MockMetadataCarrier
}

// NewMockMetadataCarrier creates a new mock instance.
func NewMockMetadataCarrier(ctrl *gomock.Controller) *MockMetadataCarrier {
	mock := &MockMetadataCarrier{ctrl: ctrl}
	mock.recorder = &MockMetadataCarrierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetadataCarrier) EXPECT() *MockMetadataCarrierMockRecorder {
	return m.recorder
}

// GetDomain mocks base method.
func (m *MockMetadataCarrier) GetDomain() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDomain")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetDomain indicates an expected call of GetDomain.
func (mr *MockMetadataCarrierMockRecorder) GetDomain() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDomain", reflect.TypeOf((*MockMetadataCarrier)(nil).GetDomain))
}

// GetEventName mocks base method.
func (m *MockMetadataCarrier) GetEventName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEventName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetEventName indicates an expected call of GetEventName.
func (mr *MockMetadataCarrierMockRecorder) GetEventName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEventName", reflect.TypeOf((*MockMetadataCarrier)(nil).GetEventName))
}
